apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres-primary
  labels:
    app: postgres
    heritage: deis-backing-services
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
        node: primary
        heritage: deis-backing-services
    spec:
      containers:
      - name: postgres-primary
        image: "paunin/postgresql-cluster-pgsql:{{ default "" .Values.postgres.imageTag }}"
        imagePullPolicy: {{ default "Always" .Values.postgres.imagePullPolicy }}
        env:
        - name: "INITIAL_NODE_TYPE"
          value: "master"
        - name: "NODE_ID"
          value: "1"
        - name: "NODE_NAME"
          value: "node1"
        - name: "CLUSTER_NODE_NETWORK_NAME"
          value: "postgres-primary-service"
        - name: "POSTGRES_PASSWORD"
          value: {{ .Values.postgres.password | quote }}
        - name: "POSTGRES_USER"
          value: {{ .Values.postgres.username | quote }}
        - name: "POSTGRES_DB"
          value: {{ .Values.postgres.database | quote }}
        - name: "CLUSTER_NAME"
          value: "pg_cluster"
        - name: "REPLICATION_DB"
          value: "replication_db"
        - name: "REPLICATION_USER"
          value: "replication_user"
        - name: "REPLICATION_PASSWORD"
          value: "replication_pass"
        - name: "CONFIGS"
          value: "autovacuum:on"
        # Put data in a subdir of /var/lib/postgresql/data or pg starts complaining:
        #
        # initdb: directory "/var/lib/postgresql/data" exists but is not empty
        # It contains a lost+found directory, perhaps due to it being a mount point.
        # Using a mount point directly as the data directory is not recommended.
        - name: "PGDATA"
          value: /var/lib/postgresql/data/subdir
        ports:
        - name: postgres
          containerPort: 5432
        volumeMounts:
        - mountPath:  /var/lib/postgresql/data
          name: pg-data-volume
      volumes:
      - name: pg-data-volume
        persistentVolumeClaim:
          claimName: "{{ .Values.postgres.diskName }}-claim"
